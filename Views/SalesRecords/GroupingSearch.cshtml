@model IEnumerable<IGrouping<Department, SalesRecord>>

@{
    ViewData["Title"] = "Busca Agrupada";
    DateTime minDate = DateTime.Parse(ViewData["minDate"] as string);
    DateTime maxDate = DateTime.Parse(ViewData["maxDate"] as string);
}

<h2>@ViewData["Title"]</h2>

<!-- Barra de busca, permitindo ajustar datas minimas e maximas. -->
<nav class="nav navbar-inverse">
    <div class="container-fluid">
        <form class="navbar-form navbar-left" role="search">
            <div class="form-group">
                <div class="form-group">
                    <label for="minDate">Data Miníma</label>
                    <input type="date" class="form-control" name="minDate" value=@ViewData["minDate"] />
                </div>
                <div class="form-group">
                    <label for="maxDate">Data Máxima</label>
                    <input type="date" class="form-control" name="maxDate" value=@ViewData["maxDate"] />
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Filtrar</button>
        </form>
    </div>
</nav>
<br>

<!-- Como os dados nesse exemplo estarão agrupados por departamentos, será necessários dois foreach's.
     Um para percorrer a lista de agrupamentos(IGrouping<Department, SalesRecord>, para cada departamento,
     terão varios salesRecord), então será necessário um foreach para percorrer os Departments e outro para
     percorrer os SalesRecords -->

<!-- foreach departments = para cada department será criado um painel com uma tabela de vendas
     com Data, Valor, Vendedor e Status -->
@foreach (var departmentGroup in Model)
{
    <div class="panel panel-primary">
        <div class="panel-heading">
            <!--  -->
            <h4 class="panel-title">Departamento @departmentGroup.Key.Name, Total de Vendas = @departmentGroup.Key.TotalSales(minDate, maxDate ).ToString("C")</h4>
        </div>
        <div class="panel-body">
            <table class="table table-striped table-hover">

                <thead>
                    <tr class="success">
                        <th>
                            Data
                        <th>
                            Valor
                        </th>
                        <th>
                            Vendedor
                        </th>
                        <th>
                            Status
                        </th>
                    </tr>
                </thead>
                <tbody>

                    <!-- foreach sales = para cada departament, o metodo percorre as vendas desse department
                         preenchendo com os devidos elementos.-->
                    @foreach (var item in departmentGroup)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Seller.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td>
                            @Html.ActionLink("Editar", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Detalhes", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Deletar", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}


